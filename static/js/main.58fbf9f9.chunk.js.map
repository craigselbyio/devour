{"version":3,"sources":["components/Business/Business.js","components/BusinessList/BusinessList.js","components/SearchBar/SearchBar.js","util/Yelp.js","App.js","serviceWorker.js","index.js"],"names":["Business","rating","cleanRating","concat","react_default","a","createElement","className","this","getStarClass","src","props","business","imageSrc","alt","name","getStarRating","reviewCount","address","city","state","zipCode","React","Component","BusinessList","businesses","map","components_Business_Business","key","id","sortByOptions","Best Match","Highest Rated","Most Reviewed","pageSearched","SearchBar","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","term","location","sortBy","handleTermChange","bind","assertThisInitialized","handleLocationChange","handleSearch","event","setState","target","value","submitButton","document","querySelector","innerHTML","setAttribute","searchYelp","preventDefault","classList","add","console","log","sortByOption","_this2","keys","sortByOptionValue","onClick","handleSortByChange","getSortByClass","onChange","placeholder","required","renderSortByOptions","href","Yelp","search","fetch","headers","Authorization","then","response","json","jsonResponse","image_url","address1","zip_code","category","categories","title","review_count","App","components_SearchBar_SearchBar","components_BusinessList_BusinessList","Boolean","window","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.58fbf9f9.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Business.css';\r\n\r\nclass Business extends React.Component {\r\n\r\n  getStarClass(rating) {\r\n    let cleanRating;\r\n    switch (rating) {\r\n    case 5:\r\n    cleanRating = \"five\";\r\n    break;\r\n    case 4.5:\r\n    cleanRating = \"four-half\";\r\n    break;\r\n    case 4:\r\n    cleanRating = \"four\";\r\n    break;\r\n    case 3.5:\r\n    cleanRating = \"three-half\";\r\n    break;\r\n    case 3:\r\n    cleanRating = \"three\";\r\n    break;\r\n    case 2.5:\r\n    cleanRating = \"two-half\";\r\n    break;\r\n    case 2:\r\n    cleanRating = \"two\";\r\n    break;\r\n    case 1.5:\r\n    cleanRating = \"one-half\";\r\n    break;\r\n    case 1:\r\n    cleanRating = \"one\";\r\n    break;\r\n  }\r\n    return `star-rating-${cleanRating}`;\r\n  }\r\n\r\n  getStarRating(rating) {\r\n    if (rating) {\r\n      return <div className={this.getStarClass(rating)}></div>\r\n    } else {\r\n      return ''\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Business\">\r\n        <div className=\"image-container\">\r\n          <img src={this.props.business.imageSrc} alt=''/>\r\n        </div>\r\n        <div className=\"business-card\">\r\n        <h2 className=\"business-name\">{this.props.business.name}</h2>\r\n        <div className=\"Business-reviews\">\r\n          <p className=\"rating\">{this.getStarRating(this.props.business.rating)}</p>\r\n          <p className=\"review\"> {this.props.business.reviewCount} reviews</p>\r\n        </div>\r\n        <div className=\"Business-information\">\r\n          <div className=\"Business-address\">\r\n            <p>{this.props.business.address} {this.props.business.city}, {this.props.business.state} {this.props.business.zipCode}</p>\r\n          </div>\r\n        </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Business;\r\n","import React from 'react';\r\nimport './BusinessList.css';\r\nimport Business from '../Business/Business';\r\n\r\nclass BusinessList extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"BusinessList\">\r\n        {\r\n          this.props.businesses.map(business => {\r\n            return <Business key={business.id} business={business} />\r\n          })\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BusinessList;\r\n","import React from 'react';\r\nimport './SearchBar.css';\r\n\r\nconst sortByOptions = {\r\n'Best Match': 'best_match',\r\n'Highest Rated': 'rating',\r\n'Most Reviewed': 'review_count'\r\n};\r\n\r\nlet pageSearched = false;\r\n\r\nclass SearchBar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      term: '',\r\n      location: '',\r\n      sortBy: 'best_match',\r\n    };\r\n\r\n    this.handleTermChange = this.handleTermChange.bind(this);\r\n\r\n    this.handleLocationChange = this.handleLocationChange.bind(this);\r\n\r\n    this.handleSearch = this.handleSearch.bind(this);\r\n\r\n  }\r\n\r\n  handleTermChange(event) {\r\n    this.setState({\r\n      term: event.target.value\r\n    });\r\n    const submitButton = document.querySelector(\".SearchBar-submit a\");\r\n    submitButton.innerHTML = \"Let's Go!\";\r\n    submitButton.setAttribute(\"class\", \"SearchBar-submit-button\");\r\n  }\r\n  handleLocationChange(event) {\r\n    this.setState({\r\n      location: event.target.value\r\n    });\r\n    const submitButton = document.querySelector(\".SearchBar-submit a\");\r\n    submitButton.innerHTML = \"Let's Go!\";\r\n    submitButton.setAttribute(\"class\", \"SearchBar-submit-button\");\r\n  }\r\n\r\n  handleSearch(event) {\r\n    if (!this.state.term || !this.state.location) {\r\n      const submitButton = document.querySelector(\".SearchBar-submit a\");\r\n      submitButton.innerHTML = \"Enter a value in both fields!\";\r\n      submitButton.setAttribute(\"class\", \"submit-error\");\r\n    } else {\r\n      this.props.searchYelp(this.state.term, this.state.location, this.state.sortBy);\r\n      event.preventDefault();\r\n      document.querySelector('.SearchBar').classList.add(\"searchBar-searched\");\r\n      pageSearched = true;\r\n      console.log(pageSearched);\r\n      if (pageSearched) {\r\n        const businessListClass = document.querySelector('.BusinessList');\r\n        businessListClass.classList.add(\"BusinessList-show\");\r\n      } else {\r\n\r\n      }\r\n    };\r\n  };\r\n\r\n  getSortByClass(sortByOption) {\r\n    if (sortByOption === this.state.sortBy) {\r\n      return 'active'\r\n    } else {\r\n      return ''\r\n    }\r\n  };\r\n\r\n  handleSortByChange(sortByOption) {\r\n    this.setState({\r\n      sortBy: sortByOption\r\n    });\r\n  }\r\n\r\n  renderSortByOptions() {\r\n    return Object.keys(sortByOptions).map(sortByOption => {\r\n      let sortByOptionValue = sortByOptions[sortByOption];\r\n      return <li onClick={this.handleSortByChange.bind(this, sortByOptionValue)} className={this.getSortByClass(sortByOptionValue)} key={sortByOptionValue}>{sortByOption}</li>\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n  <div className=\"SearchBar\">\r\n  <div className=\"PageHeader\">\r\n      <div className=\"SiteLogo\">\r\n      </div>\r\n  </div>\r\n  <div className=\"SearchBar-fields\">\r\n    <input onChange={this.handleTermChange} placeholder=\"Business Name/Category?\" required />\r\n    <input onChange={this.handleLocationChange} placeholder=\"City?\" required />\r\n  </div>\r\n  <div className=\"SearchBar-sort-options\">\r\n    <ul>\r\n    {this.renderSortByOptions()}\r\n    </ul>\r\n  </div>\r\n  <div onClick={this.handleSearch} className=\"SearchBar-submit\">\r\n    <a className=\"SearchBar-submit-button\" href=\"#\">Let's Go!</a>\r\n  </div>\r\n</div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n","const apiKey = 'hAcwciQ-aJtECi0mDmmMmMK6nEBEKBrqNV8YO12txYhOofWZD2HfNAyYLSs3hkUrE5CAXyNUg2KG5CFwMv1vzW9psqj6mslPcTTTixBo-eKpAoPjOg-DTIAqJisHXHYx';\r\n\r\nconst Yelp = {\r\n  search(term, location, sortBy) {\r\n    console.log({sortBy});\r\n    return fetch(`https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}&sort_by=${sortBy}`, {\r\n      headers: {\r\n        Authorization: `Bearer ${apiKey}`,\r\n    },\r\n  }).then((response) => {\r\n    return response.json();\r\n  }).then((jsonResponse) => {\r\n    if (jsonResponse.businesses) {\r\n    return jsonResponse.businesses.map(((business) => {\r\n      return {\r\n        id: business.id,\r\n        imageSrc: business.image_url,\r\n        name: business.name,\r\n        address: business.location.address1,\r\n        city: business.location.city,\r\n        state: business.location.state,\r\n        zipCode: business.location.zip_code,\r\n        category: business.categories[0].title,\r\n        rating: business.rating,\r\n        reviewCount: business.review_count\r\n      }\r\n    }));\r\n  }\r\n})\r\n}\r\n};\r\n\r\nexport default Yelp;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport BusinessList from './components/BusinessList/BusinessList';\r\nimport SearchBar from './components/SearchBar/SearchBar';\r\nimport Yelp from './util/Yelp';\n\nclass App extends React.Component {\nconstructor(props) {\n  super(props);\n  this.state = {\n    businesses: [],\n  };\n\n  this.searchYelp = this.searchYelp.bind(this);\n}\n\n  searchYelp(term, location, sortBy) {\n    Yelp.search(term, location, sortBy).then(businesses => {\n      this.setState({\n      businesses: businesses\n      });\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <SearchBar searchYelp={this.searchYelp} />\n        <BusinessList businesses={this.state.businesses} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}